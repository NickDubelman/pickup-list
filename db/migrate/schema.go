// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ListsColumns holds the columns for the "lists" table.
	ListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "list_owner", Type: field.TypeInt, Nullable: true},
	}
	// ListsTable holds the schema information for the "lists" table.
	ListsTable = &schema.Table{
		Name:       "lists",
		Columns:    ListsColumns,
		PrimaryKey: []*schema.Column{ListsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lists_users_owner",
				Columns:    []*schema.Column{ListsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NbaPlayersColumns holds the columns for the "nba_players" table.
	NbaPlayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "user_nba_player", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// NbaPlayersTable holds the schema information for the "nba_players" table.
	NbaPlayersTable = &schema.Table{
		Name:       "nba_players",
		Columns:    NbaPlayersColumns,
		PrimaryKey: []*schema.Column{NbaPlayersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "nba_players_users_nba_player",
				Columns:    []*schema.Column{NbaPlayersColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "real_name", Type: field.TypeString},
		{Name: "nba_name", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// ListUsersColumns holds the columns for the "list_users" table.
	ListUsersColumns = []*schema.Column{
		{Name: "list_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ListUsersTable holds the schema information for the "list_users" table.
	ListUsersTable = &schema.Table{
		Name:       "list_users",
		Columns:    ListUsersColumns,
		PrimaryKey: []*schema.Column{ListUsersColumns[0], ListUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "list_users_list_id",
				Columns:    []*schema.Column{ListUsersColumns[0]},
				RefColumns: []*schema.Column{ListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "list_users_user_id",
				Columns:    []*schema.Column{ListUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ListsTable,
		NbaPlayersTable,
		UsersTable,
		ListUsersTable,
	}
)

func init() {
	ListsTable.ForeignKeys[0].RefTable = UsersTable
	NbaPlayersTable.ForeignKeys[0].RefTable = UsersTable
	ListUsersTable.ForeignKeys[0].RefTable = ListsTable
	ListUsersTable.ForeignKeys[1].RefTable = UsersTable
}
