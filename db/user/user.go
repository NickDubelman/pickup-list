// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRealName holds the string denoting the real_name field in the database.
	FieldRealName = "real_name"
	// FieldNbaName holds the string denoting the nba_name field in the database.
	FieldNbaName = "nba_name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeOwnedLists holds the string denoting the owned_lists edge name in mutations.
	EdgeOwnedLists = "owned_lists"
	// EdgeLists holds the string denoting the lists edge name in mutations.
	EdgeLists = "lists"
	// Table holds the table name of the user in the database.
	Table = "users"
	// OwnedListsTable is the table that holds the owned_lists relation/edge.
	OwnedListsTable = "lists"
	// OwnedListsInverseTable is the table name for the List entity.
	// It exists in this package in order to avoid circular dependency with the "list" package.
	OwnedListsInverseTable = "lists"
	// OwnedListsColumn is the table column denoting the owned_lists relation/edge.
	OwnedListsColumn = "list_owner"
	// ListsTable is the table that holds the lists relation/edge. The primary key declared below.
	ListsTable = "list_users"
	// ListsInverseTable is the table name for the List entity.
	// It exists in this package in order to avoid circular dependency with the "list" package.
	ListsInverseTable = "lists"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldRealName,
	FieldNbaName,
	FieldCreatedAt,
}

var (
	// ListsPrimaryKey and ListsColumn2 are the table columns denoting the
	// primary key for the lists relation (M2M).
	ListsPrimaryKey = []string{"list_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
